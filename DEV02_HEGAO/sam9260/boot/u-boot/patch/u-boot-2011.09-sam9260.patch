diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/arch/arm/cpu/arm926ejs/start.S /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/arch/arm/cpu/arm926ejs/start.S
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/arch/arm/cpu/arm926ejs/start.S	2011-09-30 03:11:15.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/arch/arm/cpu/arm926ejs/start.S	2012-02-20 14:09:05.669548613 +0800
@@ -269,8 +269,8 @@
 	cmp	r0, r1
 	bne	clbss_l
 
-	bl coloured_LED_init
-	bl red_led_on
+	@bl coloured_LED_init /* Disable all LED control by WENJING */
+	@bl red_led_on
 #endif
 
 /*
diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/arch/arm/lib/board.c /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/arch/arm/lib/board.c
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/arch/arm/lib/board.c	2011-09-30 03:11:15.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/arch/arm/lib/board.c	2012-02-20 14:09:05.670537807 +0800
@@ -49,6 +49,13 @@
 #include <onenand_uboot.h>
 #include <mmc.h>
 
+#include <asm/arch/at91sam9260.h>
+#include <asm/arch/at91_pmc.h>
+#include <asm/arch/gpio.h>
+//#include <asm/arch/io.h>
+#include <asm/arch/hardware.h>
+#include <asm/arch/at91_pio.h>
+
 #ifdef CONFIG_BITBANGMII
 #include <miiphy.h>
 #endif
@@ -78,6 +85,10 @@
 #include <i2c.h>
 #endif
 
+#ifdef CONFIG_LCD_UC1698
+extern void lcd_initialize(void);
+#endif
+
 
 /************************************************************************
  * Coloured LED functionality
@@ -113,6 +124,97 @@
  * but let's get it working (again) first...
  */
 
+#if defined(CONFIG_EXTEND_HW)
+
+enum
+{
+    PIN_CHARGE = 0,
+    PIN_BEEP,
+    PIN_LED2,
+    PIN_LED3,
+    PIN_LED4,
+    PIN_REMOTE_PCTRL,
+    PIN_REMOTE_IGT,
+    PIN_REMOTE_RST,
+    PIN_LOCAL_SET,
+    PIN_LOCAL_RST,
+    PIN_SW2,
+    PIN_BL,
+    PIN_RELAY_CTRL,
+    PIN_IIC_WP,
+    PIN_SW1,
+    PIN_WATCHDOG,
+};
+#define PARALLEL_COUNT          16 
+#define SER_SHCP                AT91_PIN_PA8    /* shift register clock input */
+#define SER_STCP                AT91_PIN_PA6    /* storate register clock input */
+#define SER_OE                  AT91_PIN_PA4    /* output enable (active LOW) */
+#define SER_MR                                  /* master reset (active LOW) */
+#define SER_DS                  AT91_PIN_PA10   /* serial data input */
+static unsigned char g_aucDev[PARALLEL_COUNT] = {0};
+
+static inline void set_shift_register (void)
+{
+    int i = 0;
+    for (i = 0; i < PARALLEL_COUNT; i++)
+    {
+        at91_set_gpio_output(SER_DS, g_aucDev[i]);
+        at91_set_gpio_output(SER_SHCP, 0);
+        at91_set_gpio_output(SER_SHCP, 1);
+    }
+}
+
+static inline void set_store_register (void)
+{
+    at91_set_gpio_output(SER_STCP, 0);
+    at91_set_gpio_output(SER_STCP, 1);
+    at91_set_gpio_output(SER_STCP, 0);
+}
+
+static inline void hardware_init (void)
+{
+    set_shift_register();
+    set_store_register();
+    at91_set_gpio_output(SER_OE, 0);
+}
+
+void hw_control ()
+{
+        set_shift_register();
+        set_store_register();
+}
+
+#if defined(CONFIG_ALARM)
+
+void alarm (unsigned char count, unsigned int mSec)
+{
+    while (count > 0)
+    {
+        g_aucDev[PIN_BEEP] = 1;
+        g_aucDev[PIN_LED2] = 1;
+        g_aucDev[PIN_LED3] = 1;
+        g_aucDev[PIN_LED4] = 1;
+        hw_control();
+
+        udelay(1000 * mSec);
+        g_aucDev[PIN_BEEP] = 0;
+        g_aucDev[PIN_LED2] = 0;
+        g_aucDev[PIN_LED3] = 0;
+        g_aucDev[PIN_LED4] = 0;
+        hw_control();
+        
+        count--;
+        if (count > 0)
+        {
+            udelay(1000 * mSec);
+        }
+    }
+}
+
+#endif
+
+#endif /* end of CONFIG_EXTEND_HW */
+
 #if defined(CONFIG_ARM_DCC) && !defined(CONFIG_BAUDRATE)
 #define CONFIG_BAUDRATE 115200
 #endif
@@ -246,6 +348,9 @@
 	serial_init,		/* serial communications setup */
 	console_init_f,		/* stage 1 init of console */
 	display_banner,		/* say that we are here */
+#if defined(CONFIG_EXTEND_HW)
+    hardware_init,
+#endif
 #if defined(CONFIG_DISPLAY_CPUINFO)
 	print_cpuinfo,		/* display cpu info (and speed) */
 #endif
@@ -280,7 +385,6 @@
 			hang ();
 		}
 	}
-
 	debug("monitor len: %08lX\n", gd->mon_len);
 	/*
 	 * Ram is setup, size stored in gd !!
@@ -504,6 +608,15 @@
 	}
 #endif
 
+#if defined(CONFIG_LCD_UC1698)
+    g_aucDev[PIN_BL] = 1;
+    lcd_initialize();
+#endif
+
+#if defined(CONFIG_ALARM)
+    alarm(1, 10);
+#endif
+
 #if defined(CONFIG_CMD_NAND)
 	puts("NAND:  ");
 	nand_init();		/* go init the NAND */
@@ -585,6 +698,8 @@
 #ifdef CONFIG_BITBANGMII
 	bb_miiphy_init();
 #endif
+#if 0 /* Disable here to save startup time by WENJING */
+
 #if defined(CONFIG_CMD_NET)
 #if defined(CONFIG_NET_MULTI)
 	puts("Net:   ");
@@ -596,6 +711,8 @@
 #endif
 #endif
 
+#endif
+
 #ifdef CONFIG_POST
 	post_run(NULL, POST_RAM | post_bootmode_get(0));
 #endif
diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/board/atmel/at91sam9260ek/lcd_uc1698.c /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/board/atmel/at91sam9260ek/lcd_uc1698.c
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/board/atmel/at91sam9260ek/lcd_uc1698.c	1970-01-01 08:00:00.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/board/atmel/at91sam9260ek/lcd_uc1698.c	2012-02-20 14:09:05.670537807 +0800
@@ -0,0 +1,306 @@
+#include <common.h>
+#include <asm/io.h>
+#include <asm/arch/at91sam9260_matrix.h>
+#include <asm/arch/at91sam9_smc.h>
+#include <asm/arch/at91_common.h>
+#include <asm/arch/at91_pmc.h>
+#include <asm/arch/at91_rstc.h>
+
+#include <asm/arch/gpio.h>
+
+#define COL_ADDR_LSB        0x00    /* CA[3:0] */
+#define COL_ADDR_MSB        0x10    /* CA[6:4] */
+#define TEMP_COMPENS        0x24    /* TC[1:0] */
+#define POWER_CTL           0x28    /*   */
+#define ADV_POW_CTL_CMD     0x30    /* ---USELESS---  */
+#define SCR_LINE_LSB        0x40    /* SL[3:0] */
+#define SCR_LINE_MSB        0x50    /* SL[7:4] */
+#define ROW_ADDR_LSB        0x60    /* RA[3:0] */
+#define ROW_ADDR_MSB        0x70    /* RA[7:4] */
+#define VBIAS_POTENT_CMD    0x81    /* PM[7:0] */
+#define PARTIAL_DISP        0x84    /* LC[8] */
+#define RAM_ADDR_CTL        0x88    /* AC[2:0] */
+#define FIXED_LINE_CMD      0x90    /* FLT, FLB */
+#define LINE_RATE           0xA0    /* LC[4:3] */
+#define ALL_PIXEL_ON        0xA4    /* DC[1] */
+#define INVERSE_DISP        0xA6    /* DC[0] */
+#define DISP_ENABLE         0xA8    /* DC[4:2] */
+#define MAPPING_CTL         0xC0    /* LC[2:0] */
+#define LINE_INVERSE_CMD    0xC8    /* NIV[4:0] */
+#define COLOR_PATTERN       0xD0    /* LC[5] */
+#define COLOR_MODE          0xD4    /* LC[7:6] */
+#define COM_SCAN_FUNC       0xD8    /* CSF[2:0] */
+#define RESET_CMD           0xE2    /*  */
+#define BIAS_RATIO          0xE8    /* BR[1:0] */
+#define COM_END_CMD         0xF1    /* CEN[6:0] */
+#define PARTIAL_START_CMD   0xF2    /* DST[6:0] */
+#define PARTIAL_END_CMD     0xF3    /* DEN[6:0] */
+#define WIN_COL_START_CMD   0xF4    /* WPC0 */
+#define WIN_ROW_START_CMD   0xF5    /* WPP0 */
+#define WIN_COL_END_CMD     0xF6    /* WPC1 */
+#define WIN_ROW_END_CMD     0xF7    /* WPP1 */
+#define WIN_MODE            0xF8    /* AC[3] */
+#define MTP_OPER_CTL_CMD    0xB8    /* MTPC[4:0]*/
+//#define /*  */
+
+unsigned char width_16_BL [] = 
+{
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xF0,0x1C,0x3C,
+0x1C,0x1E,0x1C,0x0E,0x1C,0x0E,0x1C,0x0E,0x1C,0x0E,0x1C,0x1C,0x1C,0x38,0x1F,0xF0,
+0x1C,0x1C,0x1C,0x0E,0x1C,0x06,0x1C,0x07,0x1C,0x07,0x1C,0x07,0x1C,0x07,0x1C,0x07,
+0x1C,0x0E,0x1C,0x1C,0x7F,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/* "B",0*/
+
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xF0,0x0F,0x3C,0x0C,0x0E,
+0x1C,0x0E,0x38,0x07,0x38,0x07,0x38,0x07,0x38,0x07,0x38,0x07,0x38,0x07,0x1C,0x0E,
+0x1C,0x0E,0x0E,0x1C,0x03,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/* "o",1*/
+
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xF0,0x0F,0x3C,0x0C,0x0E,
+0x1C,0x0E,0x38,0x07,0x38,0x07,0x38,0x07,0x38,0x07,0x38,0x07,0x38,0x07,0x1C,0x0E,
+0x1C,0x0E,0x0E,0x1C,0x03,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/* "o",2*/
+
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x01,0x80,0x01,0x80,0x01,0x80,0x03,0x80,0x07,0x80,0x3F,0xFC,0x03,0x80,0x03,0x80,
+0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x80,0x03,0x86,
+0x03,0x86,0x01,0xCC,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/* "t",3*/
+
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xE0,0x01,0xE0,
+0x01,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x1F,0xC0,0x01,0xC0,0x01,0xC0,
+0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,0x01,0xC0,
+0x01,0xC0,0x01,0xC0,0x1F,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/* "i",4*/
+
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,0x7C,0xF8,0x1F,0x9C,0x1E,0x0E,
+0x1C,0x0E,0x1C,0x0E,0x1C,0x0E,0x1C,0x0E,0x1C,0x0E,0x1C,0x0E,0x1C,0x0E,0x1C,0x0E,
+0x1C,0x0E,0x1C,0x0E,0x7F,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/* "n",5*/
+
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0x0E,0x3F,0x0C,0x1C,
+0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x0C,0x1C,0x0E,0x38,0x0F,0xF0,0x1C,0x00,0x1C,0x00,
+0x0F,0xF8,0x0F,0xFE,0x18,0x0F,0x38,0x07,0x38,0x07,0x38,0x07,0x1E,0x1E,0x07,0xF8,/* "g",6*/
+
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x00,
+0x3E,0x00,0x3E,0x00,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/* ".",7*/
+
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x00,
+0x3E,0x00,0x3E,0x00,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/* ".",8*/
+
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
+0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x00,
+0x3E,0x00,0x3E,0x00,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/* ".",9*/
+};
+
+typedef unsigned char     U8;
+void *disp_base; 
+
+#define write_data(Byte)    (*(volatile unsigned char*)(disp_base + 4) = (Byte))
+#define write_cmd(Byte)     (*(volatile unsigned char*)disp_base = (Byte))
+
+/*
+ * Get data by ROWs, the first bit at the high level
+ * 
+ * Font 12 * 24 G
+ *
+ * 0000,1111,0100 -> Line 6 -> 0x0F,0x40
+ * 0001,1000,1100 -> Line 7 -> 0x18,0xC0
+ *
+ */
+static void dis_reverse (U8 xMirror, U8 yMirror, U8 width, U8 height, U8 *p)
+{
+    U8 i, compare = 0; 
+    unsigned long each_row_byte;
+    int j = 0, byte_count = 0;
+    U8 data[160] = {0};
+    U8 *font, write_data_count = 0;
+
+    xMirror = 37 + xMirror;
+
+    each_row_byte = width / 8 + ((0 == width % 8) ? 0 : 1);
+    
+    for (i = 0; i < height; i++)
+    {
+        write_cmd(0x00 | (xMirror  & 0x0f));
+        write_cmd(0x10 | ((xMirror & 0xf0) >> 4)); /* Why this four command must be together ??? */
+
+        write_cmd(0x60 | ((yMirror + i)  & 0x0f));
+        write_cmd(0x70 | (((yMirror + i) & 0xf0) >> 4));
+
+        write_data_count = 0;
+        byte_count = each_row_byte - 1;
+
+        for (j = width - 1; j >= 0; j--) /* wirte one row */ 
+        {
+            data[j] = 0x00;
+            compare = 0x80 >> (j - 8 * (byte_count));
+            font = p + i * each_row_byte + byte_count;
+
+            if ((compare == ((*font) & compare)))
+            {
+                if(0 == j % 2)
+                {
+                    data[j] = 0x08;
+                }
+                else
+                {
+                    data[j] = 0x80;
+                }
+            }
+
+            if (0 == j % 2)
+            {
+                write_data(data[j + 1] | data[j]);
+                write_data_count++;
+            }
+
+            if (0 == (j % 8))
+            {
+                byte_count--;
+            }
+        }
+
+        if (2 == write_data_count % 3)
+        {
+            write_data(0x00);
+        }
+        else if (1 == write_data_count % 3)
+        {
+            write_data(0x00);
+            write_data(0x00);
+        }
+    }
+}
+
+static void init_uc1698 (void)
+{
+	write_cmd(RESET_CMD);
+    udelay(100);
+
+	write_cmd(POWER_CTL | 0x03);    /* PC[1:0] 11b -> internal Vlcd 13nF< LCD < 22nF */
+    write_cmd(LINE_RATE | 0x00);    /* LC[4:3] 00b -> 8.5KIps */
+    write_cmd(BIAS_RATIO | 0x03);   /* BR[1:0] must between V_lcd and V_bias */
+	
+    write_cmd(COM_END_CMD | 0x00);  /* set CEN[6:0] Com end */
+    write_cmd(0x9F);                /* value 159 ->  duty :1/160 */
+
+    write_cmd(VBIAS_POTENT_CMD);
+    write_cmd(0x80);                /* VLCD=(CV0+Cpm*pm)*(1+(T-25)*CT%) */
+    
+    write_cmd(MAPPING_CTL | 0x00);  /* LC[2:0] MY inversion/MX inversion/Fix line display */
+    
+    write_cmd(RAM_ADDR_CTL | 0x01); /* AC[2:0] AC[0] -> RA or CA will increment by one step */
+	write_cmd(COLOR_PATTERN | 0x01);
+	write_cmd(COLOR_MODE | 0x01);   /* when DC[2]=1 and LC[7:6]=01b means 4k-color*/
+
+    write_cmd(COM_SCAN_FUNC | 0x02);/* CSF[2:0] PWM:FRC:LRM */
+	write_cmd(DISP_ENABLE | 0x05);  /* DC[4:2]=101b display on, select on/off mode, Green Enhance mode disable */
+
+    //write_cmd(INVERSE_DISP | 0x01);
+
+#ifdef LINE_INVERSION
+    write_cmd(LINE_INVERSE_CMD);
+	write_cmd(0x18);                /* NIV[4:0] 11 000 -> Enable NIV / XOR / 11 Lines */ 
+#endif
+
+#ifdef PARTIAL_DISPALY   
+    write_cmd(PARTIAL_START_CMD);
+    write_cmd(0x00); 
+    write_cmd(PARTIAL_END_CMD);
+    write_cmd(0x5f);                /* 0x9f -> 159 */
+    write_cmd(PARTIAL_DISP | 0x01);
+#endif
+
+#ifdef SCROLL_FIXED_LINE
+	write_cmd(SCR_LINE_LSB | 0x00); /* SL[3:0] */
+	write_cmd(SCR_LINE_MSB | 0x00);	/* SL[7:4]  */
+	write_cmd(FIXED_LINE_CMD);		/* FLT, FLB */
+	write_cmd(0x00);
+#endif
+}
+
+static void Init_Ram_Address(void)
+{
+    write_cmd(ROW_ADDR_MSB | 0x00); /* RA[7:4] */
+	write_cmd(ROW_ADDR_LSB | 0x00); /* RA[3:0] */
+
+	write_cmd(COL_ADDR_MSB | 0x02); /* CA[6:4] */
+	write_cmd(COL_ADDR_LSB | 0x05); /* CA[3:0] 0100101B --> 37D*/
+
+	write_cmd(WIN_COL_START_CMD);
+    write_cmd(0x25);                /* 37D ---> SEG 112*/
+
+	write_cmd(WIN_COL_END_CMD);
+    write_cmd(0x5a);                /* [0x5A-0x2A] --> SEG 271 -->ensure 54[RGB]X3 per line --> 162Bit */
+
+	write_cmd(WIN_ROW_START_CMD);
+	write_cmd(0x00);
+
+	write_cmd(WIN_ROW_END_CMD);
+	write_cmd(0x9f);                /* 0x9F->159 */
+
+	write_cmd(WIN_MODE | 0x00);
+}
+
+void lcd_initialize (void)
+{
+    int i = 0, j = 0;
+    int x = 0;
+
+    at91_set_B_periph(AT91_PIN_PC12, 0); /* Enable CS7 */
+    disp_base = map_physmem(0x80000000, 0x0f, 1);
+    
+    struct at91_smc *smc = (struct at91_smc *)ATMEL_BASE_SMC;
+
+    /*  Configure SMC CS7 for LCD */
+    writel(AT91_SMC_SETUP_NWE(1) | AT91_SMC_SETUP_NCS_WR(1) |
+            AT91_SMC_SETUP_NRD(1) | AT91_SMC_SETUP_NCS_RD(1),
+            &smc->cs[7].setup);
+    writel(AT91_SMC_PULSE_NWE(7) | AT91_SMC_PULSE_NCS_WR(11) |
+            AT91_SMC_PULSE_NRD(7) | AT91_SMC_PULSE_NCS_RD(11),
+            &smc->cs[7].pulse);
+    writel(AT91_SMC_CYCLE_NWE(12) | AT91_SMC_CYCLE_NRD(12),
+            &smc->cs[7].cycle);
+    writel(AT91_SMC_MODE_RM_NRD | 
+            AT91_SMC_MODE_EXNW_DISABLE |
+            AT91_SMC_MODE_DBW_8 |
+            AT91_SMC_MODE_WM_NWE |
+            AT91_SMC_MODE_BAT |
+            AT91_SMC_MODE_TDF_CYCLE(4),
+            &smc->cs[7].mode);
+
+    init_uc1698();
+    Init_Ram_Address();
+
+    for(i = 0; i < 160; i++)
+    {  
+        for (j = 0; j < 27; j++)
+        {
+            write_data(0x0);
+            write_data(0x0);
+            write_data(0x0);
+        }
+    }
+
+    x = (160 - 16) / 3;
+    //yMirror = (160 - 32) / 2 = 64
+
+    for(i = 0; x >= 0 && i < 9; i++) /* Booting..*/
+    {
+        dis_reverse(x, 64, 16, 32, &width_16_BL[i * 64]);
+        x -= 6;
+    }
+}
+
+void dis_ctrl (unsigned char flag)
+{
+    if (flag)
+        write_cmd(INVERSE_DISP | 0x01);
+    else
+        write_cmd(DISP_ENABLE | 0x00);
+}
+
diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/board/atmel/at91sam9260ek/led.c /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/board/atmel/at91sam9260ek/led.c
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/board/atmel/at91sam9260ek/led.c	2011-09-30 03:11:15.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/board/atmel/at91sam9260ek/led.c	2012-02-20 14:09:05.670537807 +0800
@@ -28,10 +28,12 @@
 
 void coloured_LED_init(void)
 {
+#ifdef CONFIG_COLOURED_LED
 	/* Clock is enabled in board_early_init_f() */
 	at91_set_gpio_output(CONFIG_RED_LED, 1);
 	at91_set_gpio_output(CONFIG_GREEN_LED, 1);
 
 	at91_set_gpio_value(CONFIG_RED_LED, 0);
 	at91_set_gpio_value(CONFIG_GREEN_LED, 1);
+#endif
 }
diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/board/atmel/at91sam9260ek/Makefile /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/board/atmel/at91sam9260ek/Makefile
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/board/atmel/at91sam9260ek/Makefile	2011-09-30 03:11:15.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/board/atmel/at91sam9260ek/Makefile	2012-02-20 14:09:05.670537807 +0800
@@ -32,6 +32,7 @@
 COBJS-y	+= at91sam9260ek.o
 COBJS-y	+= led.o
 COBJS-$(CONFIG_HAS_DATAFLASH) += partition.o
+COBJS-$(CONFIG_LCD_UC1698) += lcd_uc1698.o
 
 SRCS	:= $(SOBJS:.o=.S) $(COBJS-y:.o=.c)
 OBJS	:= $(addprefix $(obj),$(COBJS-y))
diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/common/cmd_bootm.c /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/common/cmd_bootm.c
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/common/cmd_bootm.c	2011-09-30 03:11:15.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/common/cmd_bootm.c	2012-02-20 14:09:05.671537755 +0800
@@ -37,6 +37,10 @@
 #include <linux/ctype.h>
 #include <asm/byteorder.h>
 
+#ifdef CONFIG_ALARM 
+extern void alarm(unsigned char count, unsigned int mSec);
+#endif
+
 #if defined(CONFIG_CMD_USB)
 #include <usb.h>
 #endif
@@ -215,19 +219,77 @@
 {
 	void		*os_hdr;
 	int		ret;
+	uint32_t fs_len = 0;
+	ulong img_addr = 0x21100000; 
+
+    char *pc_bootcmd= getenv ("bootcmd");
+    char bootcmd[128];
 
 	memset ((void *)&images, 0, sizeof (images));
-	images.verify = getenv_yesno ("verify");
+	//images.verify = getenv_yesno ("verify");
+	images.verify = 1; /* Make sure to verify both OS and FS by WENJING */
 
 	bootm_start_lmb();
 
 	/* get kernel image header, start address and length */
 	os_hdr = boot_get_kernel (cmdtp, flag, argc, argv,
 			&images, &images.os.image_start, &images.os.image_len);
-	if (images.os.image_len == 0) {
-		puts ("ERROR: can't get kernel image!\n");
-		return 1;
-	}
+
+    /* Add filesystem valide check and fix the argument of ENV 'bootcmd' */
+    if (images.os.image_len == 0) 
+    {
+        if (0 != strcmp(getenv("bootcmd"), CONFIG_BOOTCOMMAND))
+        {
+            setenv("bootcmd", CONFIG_BOOTCOMMAND);
+            saveenv();
+            run_command(CONFIG_BOOTCOMMAND, 0);
+        }
+        else
+        {
+            puts ("ERROR: can't get kernel image!\n");
+#ifdef CONFIG_ALARM
+            alarm(1, 100);
+#endif
+            return 1;
+        }
+    }
+
+    /* Before start Linux kernel check filesystem valide WENJING */
+    image_header_t *fs_hdr = NULL;
+    fs_hdr = image_get_kernel (0x21100000, images.verify); 
+    if(NULL == fs_hdr) 
+    {
+        if (0 != strcmp(getenv("bootcmd"), CONFIG_BOOTCOMMAND))
+        {
+            setenv("bootcmd", CONFIG_BOOTCOMMAND);
+            saveenv();
+            run_command(CONFIG_BOOTCOMMAND, 0);
+        }
+        else
+        {
+            puts ("ERROR: can't get FileSystem image!\n");
+#ifdef CONFIG_ALARM
+            alarm(2, 200);
+#endif
+            return 1;
+        }
+    }
+
+    fs_len = image_get_data_size ((image_header_t *)img_addr) + sizeof(image_header_t);
+    images.os.image_len += sizeof(image_header_t);
+
+    sprintf(bootcmd, "nand read 20000000 200000 %x;nand read 21100000 700000 %x;bootm 20000000",
+                images.os.image_len, fs_len);
+
+    if (0 != strcmp(pc_bootcmd, bootcmd))
+    {
+#ifdef CONFIG_ALARM
+        alarm(3, 30);
+#endif
+        setenv("bootcmd", bootcmd);
+        saveenv();
+    }
+    /* add finish by WENJING Sat Dec  3 14:04:42 CST 2011 */
 
 	/* get image parameters */
 	switch (genimg_get_format (os_hdr)) {
diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/common/env_common.c /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/common/env_common.c
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/common/env_common.c	2011-09-30 03:11:15.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/common/env_common.c	2012-02-20 14:09:05.671537755 +0800
@@ -48,6 +48,10 @@
 #define MK_STR(x)	XMK_STR(x)
 
 const uchar default_environment[] = {
+/* Add userful default ENV by WENJING */
+#ifdef	CONFIG_SILENT
+	"silent="	CONFIG_SILENT           "\0"
+#endif
 #ifdef	CONFIG_BOOTARGS
 	"bootargs="	CONFIG_BOOTARGS			"\0"
 #endif
diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/common/env_nand.c /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/common/env_nand.c
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/common/env_nand.c	2011-09-30 03:11:15.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/common/env_nand.c	2012-02-20 14:09:05.671537755 +0800
@@ -29,9 +29,6 @@
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
  * MA 02111-1307 USA
  */
-
-#define DEBUG
-
 #include <common.h>
 #include <command.h>
 #include <environment.h>
@@ -286,6 +283,12 @@
 
 	u_char *char_ptr;
 
+    /* Skip loop restart uboot if NAND can not find by WENJING */
+    if (NULL == nand_info[0].name)
+    {
+        return 1;
+    }
+
 	blocksize = nand_info[0].erasesize;
 	if (!blocksize)
 		return 1;
diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/common/main.c /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/common/main.c
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/common/main.c	2011-09-30 03:11:15.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/common/main.c	2012-02-20 14:09:05.672537849 +0800
@@ -81,6 +81,9 @@
 extern void mdm_init(void); /* defined in board.c */
 #endif
 
+#ifdef CONFIG_LCD_UC1698
+extern void dis_ctrl(unsigned char flag);
+#endif
 /***************************************************************************
  * Watch for 'delay' seconds for autoboot stop or autoboot delay string.
  * returns: 0 -  no key string, allow autoboot
@@ -205,7 +208,6 @@
 static inline int abortboot(int bootdelay)
 {
 	int abort = 0;
-
 #ifdef CONFIG_MENUPROMPT
 	printf(CONFIG_MENUPROMPT);
 #else
@@ -219,9 +221,12 @@
 	 */
 	if (bootdelay >= 0) {
 		if (tstc()) {	/* we got a key press	*/
-			(void) getc();  /* consume input	*/
-			puts ("\b\b\b 0");
-			abort = 1;	/* don't auto boot	*/
+            /* on ZERO_BOOTDELAY_CHECK mode only 'ESC' key can go into uboot mode BY WENJING */
+            if (27 == getc())
+            {
+                abort = 1;  /* don't auto boot */
+            }
+
 		}
 	}
 #endif
@@ -377,7 +382,11 @@
 # endif
 
 # ifndef CONFIG_SYS_HUSH_PARSER
+#ifdef CONFIG_LCD_UC1698
+        dis_ctrl(1);
+#endif
 		run_command (s, 0);
+
 # else
 		parse_string_outer(s, FLAG_PARSE_SEMICOLON |
 				    FLAG_EXIT_FROM_LOOP);
@@ -388,6 +397,13 @@
 # endif
 	}
 
+#ifdef CONFIG_SILENT_CONSOLE
+    gd->flags &= ~GD_FLG_SILENT; /* If auto start command failed will go into uboot BY WENJING */
+#ifdef CONFIG_LCD_UC1698
+    dis_ctrl(0);
+#endif
+#endif
+
 # ifdef CONFIG_MENUKEY
 	if (menukey == CONFIG_MENUKEY) {
 		s = getenv("menucmd");
@@ -403,6 +419,18 @@
 #endif /* CONFIG_MENUKEY */
 #endif /* CONFIG_BOOTDELAY */
 
+/* Initlization ETH on uboot mode only BY WENJING */
+#if defined(CONFIG_CMD_NET)
+#if defined(CONFIG_NET_MULTI)
+    puts("Net:   ");
+#endif
+    eth_initialize(gd->bd);
+#if defined(CONFIG_RESET_PHY_R)
+    debug("Reset Ethernet PHY\n");
+    reset_phy();
+#endif
+#endif
+
 	/*
 	 * Main Loop for Monitor Command Processing
 	 */
@@ -411,6 +439,24 @@
 	/* This point is never reached */
 	for (;;);
 #else
+
+    /* Skip rubbish ESC input, add by WENJING Mon Dec  5 17:12:37 CST 2011 */
+    int i = 0;
+    while (i < 3)
+    {
+        if (tstc())
+        {
+            getc();
+            puts(CONFIG_SYS_PROMPT);
+            putc('\n');
+        }
+        else
+        {
+            i++;
+        }
+        udelay(50000); /* 50ms*/
+    }
+
 	for (;;) {
 #ifdef CONFIG_BOOT_RETRY_TIME
 		if (rc >= 0) {
@@ -449,8 +495,8 @@
 		if (rc <= 0) {
 			/* invalid command or not repeatable, forget it */
 			lastcommand[0] = 0;
-		}
-	}
+        }
+    }
 #endif /*CONFIG_SYS_HUSH_PARSER*/
 }
 
@@ -695,10 +741,9 @@
 			WATCHDOG_RESET();
 		}
 #endif
-
-		ichar = getcmd_getch();
-
-		if ((ichar == '\n') || (ichar == '\r')) {
+        ichar = getcmd_getch();
+        
+        if ((ichar == '\n') || (ichar == '\r')) {
 			putc('\n');
 			break;
 		}
diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/drivers/spi/atmel_dataflash_spi.c /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/drivers/spi/atmel_dataflash_spi.c
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/drivers/spi/atmel_dataflash_spi.c	2011-09-30 03:11:15.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/drivers/spi/atmel_dataflash_spi.c	2012-02-20 14:09:05.672537849 +0800
@@ -29,7 +29,6 @@
  *
  * 02-Aug-2010 Reinhard Meyer <uboot@emk-elektronik.de>
  */
-
 #include <common.h>
 #ifndef CONFIG_ATMEL_LEGACY
 # define CONFIG_ATMEL_LEGACY
diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/include/configs/at91sam9260ek.h /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/include/configs/at91sam9260ek.h
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/include/configs/at91sam9260ek.h	2011-09-30 03:11:15.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/include/configs/at91sam9260ek.h	2012-02-20 14:22:35.783548516 +0800
@@ -39,7 +39,24 @@
  * Since the linker has to swallow that define, we must use a pure
  * hex number here!
  */
-#define CONFIG_SYS_TEXT_BASE		0x21f00000
+#define CONFIG_SYS_TEXT_BASE            0x23f00000
+#define CONFIG_ZERO_BOOTDELAY_CHECK     1
+#define CONFIG_SILENT_CONSOLE           1
+#define CONFIG_SILENT                   "MUTE" 
+
+#if 0
+#define CONFIG_ALARM
+#define CONFIG_EXTEND_HW
+#define CONFIG_LCD_UC1698
+#endif
+
+#define CONFIG_ETHADDR                  CONFIG_MAC_ADDR
+#define CONFIG_ENV_OVERWRITE
+#define CONFIG_IPADDR                   192.168.200.108
+#define CONFIG_SERVERIP                 192.168.200.188
+
+#define CONFIG_KERNEL_NANDOFF           0x200000
+#define CONFIG_ROOTFS_NANDOFF           0x700000
 
 /* ARM asynchronous clock */
 #define CONFIG_SYS_AT91_SLOW_CLOCK	32768		/* slow clock xtal */
@@ -75,12 +92,14 @@
 #define CONFIG_BAUDRATE			115200
 #define CONFIG_SYS_BAUDRATE_TABLE	{115200 , 19200, 38400, 57600, 9600 }
 
+#if 0
 /* LED */
 #define CONFIG_AT91_LED
 #define	CONFIG_RED_LED		AT91_PIN_PA9	/* this is the power led */
 #define	CONFIG_GREEN_LED	AT91_PIN_PA6	/* this is the user led */
+#endif
 
-#define CONFIG_BOOTDELAY	3
+#define CONFIG_BOOTDELAY            0
 
 /*
  * BOOTP options
@@ -104,7 +123,7 @@
 #define CONFIG_CMD_PING		1
 #define CONFIG_CMD_DHCP		1
 #define CONFIG_CMD_NAND		1
-#define CONFIG_CMD_USB		1
+//#define CONFIG_CMD_USB		1
 
 /*
  * SDRAM: 1 bank, min 32, max 128 MB
@@ -165,6 +184,7 @@
 #define CONFIG_NET_RETRY_COUNT		20
 #define CONFIG_RESET_PHY_R		1
 
+#if 0
 /* USB */
 #define CONFIG_USB_ATMEL
 #define CONFIG_USB_OHCI_NEW		1
@@ -175,8 +195,9 @@
 #define CONFIG_SYS_USB_OHCI_MAX_ROOT_PORTS	2
 #define CONFIG_USB_STORAGE		1
 #define CONFIG_CMD_FAT			1
+#endif
 
-#define CONFIG_SYS_LOAD_ADDR			0x22000000	/* load address */
+#define CONFIG_SYS_LOAD_ADDR			0x20000000	/* load address */
 
 #define CONFIG_SYS_MEMTEST_START		CONFIG_SYS_SDRAM_BASE
 #define CONFIG_SYS_MEMTEST_END			0x23e00000
@@ -216,13 +237,8 @@
 #define CONFIG_ENV_OFFSET		0x60000
 #define CONFIG_ENV_OFFSET_REDUND	0x80000
 #define CONFIG_ENV_SIZE		0x20000		/* 1 sector = 128 kB */
-#define CONFIG_BOOTCOMMAND	"nand read 0x22000000 0xA0000 0x200000; bootm"
-#define CONFIG_BOOTARGS		"console=ttyS0,115200 "			\
-				"root=/dev/mtdblock5 "			\
-				"mtdparts=atmel_nand:128k(bootstrap)ro,"	\
-				"256k(uboot)ro,128k(env1)ro,"		\
-				"128k(env2)ro,2M(linux),-(root) "	\
-				"rw rootfstype=jffs2"
+#define CONFIG_BOOTCOMMAND	"nand read 20000000 200000 500000;nand read 21100000 700000 500000;bootm 20000000"
+#define CONFIG_BOOTARGS		"console=ttyS0,115200 initrd=0x21100040,5242880 root=/dev/ram0 rw time"
 
 #endif
 
diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/include/image.h /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/include/image.h
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/include/image.h	2011-09-30 03:11:15.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/include/image.h	2012-02-20 14:09:05.673537689 +0800
@@ -169,7 +169,8 @@
 #define IH_COMP_LZMA		3	/* lzma  Compression Used	*/
 #define IH_COMP_LZO		4	/* lzo   Compression Used	*/
 
-#define IH_MAGIC	0x27051956	/* Image Magic Number		*/
+//#define IH_MAGIC	0x27051956	/* Image Magic Number		*/
+#define IH_MAGIC    0x534C4847  /* Image Magic Number SLHG as older by WENJING */
 #define IH_NMLEN		32	/* Image Name Length		*/
 
 /*
diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/Makefile /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/Makefile
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/Makefile	2011-09-30 03:11:15.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/Makefile	2012-02-20 14:09:05.673537689 +0800
@@ -24,7 +24,7 @@
 VERSION = 2011
 PATCHLEVEL = 09
 SUBLEVEL =
-EXTRAVERSION =
+EXTRAVERSION = SVN-`sed -n -e 11p ../.svn/entries`
 ifneq "$(SUBLEVEL)" ""
 U_BOOT_VERSION = $(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)
 else
@@ -158,7 +158,7 @@
 
 # set default to nothing for native builds
 ifeq ($(HOSTARCH),$(ARCH))
-CROSS_COMPILE ?=
+CROSS_COMPILE ?= /opt/buildroot-2011.02/arm926t/usr/bin/arm-linux-
 endif
 
 # load other configuration
diff -Nuar /home/wenjing/350/u-boot/patch/../u-boot-2011.09/mkconfig /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/mkconfig
--- /home/wenjing/350/u-boot/patch/../u-boot-2011.09/mkconfig	2011-09-30 03:11:15.000000000 +0800
+++ /home/wenjing/350/u-boot/patch/../u-boot-2011.09-sam9260/mkconfig	2012-02-20 14:09:05.673537689 +0800
@@ -152,6 +152,9 @@
 	echo "#define CONFIG_${i}" >>config.h ;
 done
 
+# Mostly copy from u-boot-2010.09-concentrator.patch by WENJING
+echo "#define CONFIG_MAC_ADDR 00:00:00:$(date +%y):$(date +%m):$(date +%d)" >>config.h
+
 cat << EOF >> config.h
 #define CONFIG_BOARDDIR board/$BOARDDIR
 #include <config_cmd_defaults.h>
